{"version":3,"sources":["services/games.js","components/Input.js","utils/format-label.js","components/Header.js","components/ApplicationLoading.js","components/SteamLink.js","components/LabelValue.js","components/CargGame.js","components/Application.js","App.js","index.js"],"names":["GEFORCE_URL","GameService","[object Object]","fetch","then","data","json","games","map","mapSteam","game","steam","steamUrl","_game$steamUrl$split","split","_game$steamUrl$split2","Object","slicedToArray","id","smallImageUrl","concat","imageUrl","objectSpread2","undefined","Input","label","onChange","value","react_default","a","createElement","className","htmlFor","formatLabel","charAt","toUpperCase","slice","replace","Header","title","filters","onChangeFilters","keys","field","key","e","target","ApplicationLoading","children","loading","SteamLink","href","rel","src","alt","LabelValue","CardGame","publisher","isFullyOptimized","isHighlightsSupported","genres","join","Application","App","_useState","useState","_useState2","setGames","_useState3","_useState4","setLoading","_useState5","_useState6","filteredGames","setFilteredGames","_useState7","_useState8","setFilters","useEffect","fetchGames","dataGames","filter","filledKeys","length","find","toString","toLowerCase","includes","filtersByFilterObject","Fragment","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.50834b6e.chunk.js","sourcesContent":["const GEFORCE_URL =\n  'https://static.nvidiagrid.net/supported-public-game-list/gfnpc.json?JSON';\n\nexport default class GameService {\n  static fetchGames() {\n    return fetch(GEFORCE_URL)\n      .then((data) => data.json())\n      .then((games) => games.map(GameService.mapSteam));\n  }\n\n  static mapSteam(game = {}) {\n    const steam = {};\n\n    if (game.steamUrl) {\n      [, steam.id] = game.steamUrl.split('/app/');\n      steam.steamUrl = game.steamUrl;\n      steam.smallImageUrl = `https://steamcdn-a.akamaihd.net/steam/apps/${steam.id}/capsule_184x69.jpg`;\n      steam.imageUrl = `https://steamcdn-a.akamaihd.net/steam/apps/${steam.id}/header.jpg`;\n    }\n\n    return {\n      ...game,\n      steamUrl: undefined,\n      steam: steam.id ? steam : null,\n    };\n  }\n}\n","import React from 'react';\n\nexport default function Input({ label, id, onChange, value }) {\n  return (\n    <label className=\"input\" htmlFor={id}>\n      <span className=\"input-label\">{label}</span>\n      <input\n        className=\"input-element\"\n        id={id}\n        onChange={onChange}\n        value={value}\n      />\n    </label>\n  );\n}\n","export default function formatLabel(label = '') {\n  return (\n    label.charAt(0).toUpperCase() + label.slice(1).replace(/([A-Z])/g, ' $1')\n  );\n}\n","import React from 'react';\n\nimport Input from 'components/Input';\nimport formatLabel from 'utils/format-label';\n\nexport default function Header({ title, filters, onChangeFilters }) {\n  return (\n    <header className=\"filters\">\n      <h2 className=\"filters-title\">{title}</h2>\n\n      <div className=\"filters-body\">\n        {Object.keys(filters).map((field) => (\n          <Input\n            key={field}\n            id={field}\n            label={formatLabel(field)}\n            value={filters[field]}\n            onChange={(e) => onChangeFilters(field, e.target.value)}\n          />\n        ))}\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport default function ApplicationLoading({ children, loading }) {\n  if (loading) {\n    return <div className=\"application-loading\" />;\n  }\n\n  return children;\n}\n","import React from 'react';\n\nexport default function SteamLink({ steam }) {\n  if (steam) {\n    return (\n      <a\n        className=\"steam-container\"\n        href={steam.steamUrl}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img className=\"steam-image\" src={steam.imageUrl} alt=\"\" />\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"steam-container\">\n      <span className=\"steam-image\">Sem informações da steam.</span>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function LabelValue({ label, value }) {\n  return (\n    <div>\n      <span className=\"label\">{label}</span>\n      <span className=\"value\">{`${value}`}</span>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport SteamLink from 'components/SteamLink';\nimport LabelValue from 'components/LabelValue';\nimport formatLabel from 'utils/format-label';\n\nexport default function CardGame({ game, className = '' }) {\n  return (\n    <div key={game.id} className={`card-game ${className}`}>\n      <SteamLink steam={game.steam} />\n\n      <LabelValue label={formatLabel('title:')} value={game.title} />\n      <LabelValue label={formatLabel('publisher:')} value={game.publisher} />\n      <LabelValue\n        label={formatLabel('isFullyOptimized:')}\n        value={game.isFullyOptimized}\n      />\n      <LabelValue\n        label={formatLabel('isHighlightsSupported:')}\n        value={game.isHighlightsSupported}\n      />\n      <LabelValue\n        label={formatLabel('genres:')}\n        value={game.genres.join(', ')}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport ApplicationLoading from 'components/ApplicationLoading';\nimport CardGame from 'components/CargGame';\n\nexport default function Application({ loading, games }) {\n  return (\n    <main className=\"application row\">\n      <ApplicationLoading loading={loading}>\n        {games.map((game) => (\n          <div className=\"col\" key={game.id}>\n            <CardGame game={game} />\n          </div>\n        ))}\n      </ApplicationLoading>\n    </main>\n  );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport GameService from 'services/games';\nimport Header from 'components/Header';\nimport Application from 'components/Application';\n\nimport './styles.css';\n\nfunction filtersByFilterObject(filters) {\n  const filledKeys = Object.keys(filters).filter((field) => filters[field]);\n\n  if (!filledKeys.length) {\n    return () => true;\n  }\n\n  return (data) => {\n    return filledKeys.find((label) => {\n      return !!data[label]\n        .toString()\n        .toLowerCase()\n        .includes(filters[label].toLowerCase());\n    });\n  };\n}\n\nexport default function App() {\n  const [games, setGames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filteredGames, setFilteredGames] = useState([]);\n  const [filters, setFilters] = useState({\n    title: '',\n    publisher: '',\n    isFullyOptimized: '',\n    isHighlightsSupported: '',\n    genres: '',\n  });\n\n  useEffect(() => {\n    GameService.fetchGames()\n      .then((dataGames) => setGames(dataGames))\n      .then(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setFilteredGames(games.filter(filtersByFilterObject(filters)));\n  }, [games, filters]);\n\n  return (\n    <>\n      <Header\n        title=\"GeForce-Now | Games\"\n        filters={filters}\n        onChangeFilters={(label, value) => {\n          setFilters({\n            ...filters,\n            [label]: value,\n          });\n        }}\n      />\n\n      <Application loading={loading} games={filteredGames} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}