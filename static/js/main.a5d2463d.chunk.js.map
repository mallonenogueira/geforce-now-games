{"version":3,"sources":["App.js","index.js"],"names":["API","rootElement","document","getElementById","ReactDOM","render","react_default","a","createElement","_React$useState","React","useState","_React$useState2","Object","slicedToArray","games","setGames","_React$useState3","_React$useState4","filters","setFilters","_React$useState5","title","publisher","isFullyOptimized","isHighlightsSupported","genres","_React$useState6","filtersObject","setFiltersObject","useEffect","fetch","then","data","json","dataGames","map","game","steamUrl","steamId","split","imageUrl","concat","f","filter","filtrar","keys","forEach","label","toString","toLowerCase","includes","key","value","onChange","e","objectSpread2","defineProperty","target","className","id","src","alt","join"],"mappings":"8KAGMA,SACJ,4ECCF,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOC,EAAAC,EAAAC,cDAD,WAAe,IAAAC,EACFC,IAAMC,SAAS,IADbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACrBM,EADqBH,EAAA,GACdI,EADcJ,EAAA,GAAAK,EAEEP,IAAMC,SAAS,IAFjBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAErBE,EAFqBD,EAAA,GAEZE,EAFYF,EAAA,GAAAG,EAGcX,IAAMC,SAAS,CACvDW,MAAO,GACPC,UAAW,GACXC,iBAAkB,GAClBC,sBAAuB,GACvBC,OAAQ,KARkBC,EAAAd,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGrBO,EAHqBD,EAAA,GAGNE,EAHMF,EAAA,GAuD5B,OAtCAjB,IAAMoB,UAAU,WACdC,MAAM/B,GACHgC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GAAS,OACbA,EAAUC,IAAI,SAAAC,GAOZ,OANIA,EAAKC,WACPD,EAAKE,QAAUF,EAAKC,SAASE,MAAM,SAAS,GAC5CH,EAAKI,SAAL,8CAAAC,OACEL,EAAKE,QADP,wBAIKF,MAGVL,KAAK,SAAAG,GAAS,OAAInB,EAASmB,MAC7B,IAEHzB,IAAMoB,UAAU,WACd,IAAIa,EAAI5B,EAAM6B,OAAO,SAAAP,GACnB,IAAIQ,GAAU,EAad,OAZAhC,OAAOiC,KAAKlB,GAAemB,QAAQ,SAAAC,GAE/BH,IACCR,EAAKW,GACHC,WACAC,cACAC,SAASvB,EAAcoB,GAAOE,iBAEjCL,GAAU,KAIPA,IAGTzB,EAAWuB,IACV,CAAC5B,EAAOa,IAGTtB,EAAAC,EAAAC,cAAA,WACGK,OAAOiC,KAAKlB,GAAeQ,IAAI,SAAAY,GAAK,OACnC1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO4C,IAAKJ,GACV1C,EAAAC,EAAAC,cAAA,YAAOwC,GACP1C,EAAAC,EAAAC,cAAA,SACE6C,MAAOzB,EAAcoB,GACrBM,SAAU,SAAAC,GAAC,OACT1B,EAAiBhB,OAAA2C,EAAA,EAAA3C,CAAA,GACZe,EADWf,OAAA4C,EAAA,EAAA5C,CAAA,GAEbmC,EAAQO,EAAEG,OAAOL,gBAQ9B/C,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,OACZxC,EAAQiB,IAAI,SAAAC,GAAI,OACf/B,EAAAC,EAAAC,cAAA,OAAK4C,IAAKf,EAAKuB,GAAID,UAAU,OAC1BtB,EAAKI,SACJnC,EAAAC,EAAAC,cAAA,OAAKmD,UAAU,QAAQE,IAAKxB,EAAKI,SAAUqB,IAAI,KAE/CxD,EAAAC,EAAAC,cAAA,QAAMmD,UAAU,SAAhB,kCAEFrD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMmD,UAAU,SAAhB,UADF,IACyCtB,EAAKf,OAE9ChB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMmD,UAAU,SAAhB,qBACC,GAAKtB,EAAKb,kBAEblB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMmD,UAAU,SAAhB,0BACC,GAAKtB,EAAKZ,uBAEbnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMmD,UAAU,SAAhB,cADF,IAC6CtB,EAAKd,WAElDjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMmD,UAAU,SAAhB,WADF,IAC0CtB,EAAKX,OAAOqC,KAAK,aCjGvD,MAAS9D","file":"static/js/main.a5d2463d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst API =\n  \"https://static.nvidiagrid.net/supported-public-game-list/gfnpc.json?JSON\";\n\nexport default function App() {\n  const [games, setGames] = React.useState([]);\n  const [filters, setFilters] = React.useState([]);\n  const [filtersObject, setFiltersObject] = React.useState({\n    title: \"\",\n    publisher: \"\",\n    isFullyOptimized: \"\",\n    isHighlightsSupported: \"\",\n    genres: \"\"\n  });\n\n  // const [genres, setGenres] = React.useState(\"\");\n  // const [title, setTitle] = React.useState(\"\");\n  // const [publisher, setPublisher] = React.useState(\"\");\n  // const [isFullyOptimized, setFullyOptimized] = React.useState(\"\");\n  // const [isHighlightsSupported, setHighlightsSupported] = React.useState(\"\");\n\n  React.useEffect(() => {\n    fetch(API)\n      .then(data => data.json())\n      .then(dataGames =>\n        dataGames.map(game => {\n          if (game.steamUrl) {\n            game.steamId = game.steamUrl.split(\"/app/\")[1];\n            game.imageUrl = `https://steamcdn-a.akamaihd.net/steam/apps/${\n              game.steamId\n            }/capsule_184x69.jpg`;\n          }\n          return game;\n        })\n      )\n      .then(dataGames => setGames(dataGames));\n  }, []);\n\n  React.useEffect(() => {\n    let f = games.filter(game => {\n      let filtrar = true;\n      Object.keys(filtersObject).forEach(label => {\n        if (\n          filtrar &&\n          !game[label]\n            .toString()\n            .toLowerCase()\n            .includes(filtersObject[label].toLowerCase())\n        ) {\n          filtrar = false;\n        }\n      });\n\n      return filtrar;\n    });\n\n    setFilters(f);\n  }, [games, filtersObject]);\n\n  return (\n    <div>\n      {Object.keys(filtersObject).map(label => (\n        <div>\n          <label key={label}>\n            <span>{label}</span>\n            <input\n              value={filtersObject[label]}\n              onChange={e =>\n                setFiltersObject({\n                  ...filtersObject,\n                  [label]: e.target.value\n                })\n              }\n            />\n          </label>\n        </div>\n      ))}\n\n      <div className=\"App\">\n        {filters.map(game => (\n          <div key={game.id} className=\"col\">\n            {game.imageUrl ? (\n              <img className=\"image\" src={game.imageUrl} alt=\"\" />\n            ) : (\n              <span className=\"image\">Sem informações da steam</span>\n            )}\n            <div>\n              <span className=\"label\">title:</span> {game.title}\n            </div>\n            <div>\n              <span className=\"label\">isFullyOptimized:</span>\n              {\"\" + game.isFullyOptimized}\n            </div>\n            <div>\n              <span className=\"label\">isHighlightsSupported:</span>\n              {\"\" + game.isHighlightsSupported}\n            </div>\n            <div>\n              <span className=\"label\">publisher:</span> {game.publisher}\n            </div>\n            <div>\n              <span className=\"label\">genres:</span> {game.genres.join(\", \")}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}